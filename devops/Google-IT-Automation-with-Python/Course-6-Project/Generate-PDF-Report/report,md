
Automatically Generate a PDF and send it by Email
1 hour 30 minutes Free
Rate Lab
Introduction

You work for a company that sells second hand cars. Management wants to get a summary of the amounts of vehicles that have been sold at the end of every month. The company already has a web service which serves sales data at the end of every month but management wants an email to be sent out with an attached PDF so that data is more easily readable.
What you'll do

    Write a script that summarizes and processes sales data into different categories
    Generate a PDF using Python
    Automatically send a PDF by email

You'll have 90 minutes to complete this lab.
Start the lab

You'll need to start the lab before you can access the materials in the virtual machine OS. To do this, click the green “Start Lab” button at the top of the screen.
Note: For this lab you are going to access the Linux VM through your local SSH Client, and not use the Google Console (Open GCP Console button is not available for this lab).

Start Lab

After you click the “Start Lab” button, you will see all the SSH connection details on the left-hand side of your screen. You should have a screen that looks like this:

Connection details
Accessing the virtual machine

Please find one of the three relevant options below based on your device's operating system.
Note: Working with Qwiklabs may be similar to the work you'd perform as an IT Support Specialist; you'll be interfacing with a cutting-edge technology that requires multiple steps to access, and perhaps healthy doses of patience and persistence(!). You'll also be using SSH to enter the labs -- a critical skill in IT Support that you’ll be able to practice through the labs.
Option 1: Windows Users: Connecting to your VM

In this section, you will use the PuTTY Secure Shell (SSH) client and your VM’s External IP address to connect.

Download your PPK key file

You can download the VM’s private key file in the PuTTY-compatible PPK format from the Qwiklabs Start Lab page. Click on Download PPK.

PPK

Connect to your VM using SSH and PuTTY

    You can download Putty from here

    In the Host Name (or IP address) box, enter username@external_ip_address.

Note: Replace username and external_ip_address with values provided in the lab.

Putty_1

    In the Category list, expand SSH.

    Click Auth (don’t expand it).

    In the Private key file for authentication box, browse to the PPK file that you downloaded and double-click it.

    Click on the Open button.

Note: PPK file is to be imported into PuTTY tool using the Browse option available in it. It should not be opened directly but only to be used in PuTTY.

Putty_2

    Click Yes when prompted to allow a first connection to this remote SSH server. Because you are using a key pair for authentication, you will not be prompted for a password.

Common issues

If PuTTY fails to connect to your Linux VM, verify that:

    You entered <username>@<external ip address> in PuTTY.

    You downloaded the fresh new PPK file for this lab from Qwiklabs.

    You are using the downloaded PPK file in PuTTY.

Option 2: OSX and Linux users: Connecting to your VM via SSH

Download your VM’s private key file.

You can download the private key file in PEM format from the Qwiklabs Start Lab page. Click on Download PEM.

PEM

Connect to the VM using the local Terminal application

A terminal is a program which provides a text-based interface for typing commands. Here you will use your terminal as an SSH client to connect with lab provided Linux VM.

    Open the Terminal application.

        To open the terminal in Linux use the shortcut key Ctrl+Alt+t.

        To open terminal in Mac (OSX) enter cmd + space and search for terminal.

    Enter the following commands.

Note: Substitute the path/filename for the PEM file you downloaded, username and External IP Address.

You will most likely find the PEM file in Downloads. If you have not changed the download settings of your system, then the path of the PEM key will be ~/Downloads/qwikLABS-XXXXX.pem

chmod 600 ~/Downloads/qwikLABS-XXXXX.pem

ssh -i ~/Downloads/qwikLABS-XXXXX.pem username@External Ip Address

SSH
Option 3: Chrome OS users: Connecting to your VM via SSH
Note: Make sure you are not in Incognito/Private mode while launching the application.

Download your VM’s private key file.

You can download the private key file in PEM format from the Qwiklabs Start Lab page. Click on Download PEM.

PEM

Connect to your VM

    Add Secure Shell from here to your Chrome browser.

    Open the Secure Shell app and click on [New Connection].

    new-connection-button

    In the username section, enter the username given in the Connection Details Panel of the lab. And for the hostname section, enter the external IP of your VM instance that is mentioned in the Connection Details Panel of the lab.

    username-hostname-fields

    In the Identity section, import the downloaded PEM key by clicking on the Import… button beside the field. Choose your PEM key and click on the OPEN button.

Note: If the key is still not available after importing it, refresh the application, and select it from the Identity drop-down menu.

    Once your key is uploaded, click on the [ENTER] Connect button below.

    import-button

    For any prompts, type yes to continue.

    You have now successfully connected to your Linux VM.

You're now ready to continue with the lab!
Sample report

In this section, you will be creating a PDF report named "A Complete Inventory of My Fruit". The script to generate this report and send it by email is already pre-done. You can have a look at the script in the scripts/ directory.

ls ~/scripts

Output:

d88741641edb4e4e.png

In the scripts/ directory, you will find reports.py and emails.py files. These files are used to generate PDF files and send emails respectively.

Take a look at these files using cat command.

cat ~/scripts/reports.py

Output:

86bd37a685f9718e.png

cat ~/scripts/emails.py

Output:

a8e8db253f010864.png

Now, take a look at example.py, which uses these two modules reports and emails to create a report and then send it by email.

cat ~/scripts/example.py

Grant executable permission to the example.py script.

sudo chmod o+wx ~/scripts/example.py

Run the example.py script, which will generate mail to you.

./scripts/example.py

A mail should now be successfully sent.

Copy the external IP address of your instance from the Connection Details Panel on the left side and open a new web browser tab and enter the IP address. The Roundcube Webmail login page appears.

Here, you'll need a login to roundcube using the username and password mentioned in the Connection Details Panel on the left hand side, followed by clicking Login.

10a23ccdb979a002.png

Now you should be able to see your inbox, with one unread email. Open the mail by double clicking on it. There should be a report in PDF format attached to the mail. View the report by opening it.

Output:

41a28598157d4729.png
Generate report

Now, let's make a couple of changes in the example.py file to add a new fruit and change the sender followed by granting editor permission. Open example.py file using the following command:

nano ~/scripts/example.py

And update the following variables:

variable_name
	

value

sender
	

Replace sender@example.com with automation@example.com

table_data
	

Add another entry into the list: ['kiwi', 4, 0.49]

The file should now look similar to:

#!/usr/bin/env python3
import emails
import os
import reports
table_data=[
  ['Name', 'Amount', 'Value'],
  ['elderberries', 10, 0.45],
  ['figs', 5, 3],
  ['apples', 4, 2.75],
  ['durians', 1, 25],
  ['bananas', 5, 1.99],
  ['cherries', 23, 5.80],
  ['grapes', 13, 2.48],
  ['kiwi', 4, 0.49]]
reports.generate("/tmp/report.pdf", "A Complete Inventory of My Fruit", "This is all my fruit.", table_data)
sender = "automation@example.com"
receiver = "{}@example.com".format(os.environ.get('USER'))
subject = "List of Fruits"
body = "Hi\n\nI'm sending an attachment with all my fruit."
message = emails.generate(sender, receiver, subject, body, "/tmp/report.pdf")
emails.send(message)

Once you've made the changes in the example.py script, save the file by typing Ctrl-o, Enter key and Ctrl-x.

Now execute the example script again.

./scripts/example.py

Now, check the webmail for any new mail. You can click on the Refresh button to refresh your inbox.

6f55d4c2f3ad0c4.png

Click Check my progress to verify the objective.

Optional challenge

As optional challenges, you could try some of the following functionalities:

    Sort the list of cars in the PDF by total sales.

    Create a pie chart for the total sales of each car made.

    Create a bar chart showing total sales for the top 10 best selling vehicles using the ReportLab Diagra library. Put the vehicle name on the X-axis and total revenue (remember, price * total sales!) along the Y-axis.
